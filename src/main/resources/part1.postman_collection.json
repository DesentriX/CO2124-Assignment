{
	"info": {
		"_postman_id": "3a3a3178-4e41-4145-bb69-91cfd529f4c4",
		"name": "Hospital Management API Tests Copy",
		"description": "Automated test cases for Hospital Management API including valid and error cases.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44045886"
	},
	"item": [
		{
			"name": "Patients",
			"item": [
				{
					"name": "POST /patients – create valid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Cris Drey\",\n  \"email\": \"drey@exmmple.com\",\n  \"phoneNumber\": \"01000030000\",\n  \"address\": \"2 Rex Street\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/patients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patients"
							]
						},
						"description": "POST /patients – create valid"
					},
					"response": []
				},
				{
					"name": "POST /patients – missing fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is correct for error\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
									"});",
									"pm.test(\"Error message is present\", function () {",
									"    var res = pm.response.json();",
									"    pm.expect(res.message || res.error || res.detail || res).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/patients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patients"
							]
						},
						"description": "POST /patients – missing fields"
					},
					"response": []
				},
				{
					"name": "POST /patients – extra unexpected field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is correct for error\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
									"});",
									"pm.test(\"Error message is present\", function () {",
									"    var res = pm.response.json();",
									"    pm.expect(res.message || res.error || res.detail || res).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test Person\",\n  \"email\": \"test@example.com\",\n  \"phoneNumber\": \"07000000000\",\n  \"address\": \"123 Test Lane\",\n  \"unknownField\": \"I should not be here\"\n  \"unknownField\": \"I should not be here\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/patients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patients"
							]
						},
						"description": "POST /patients – extra unexpected field"
					},
					"response": []
				},
				{
					"name": "GET /patients – list all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/patients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patients"
							]
						},
						"description": "GET /patients – list all"
					},
					"response": []
				},
				{
					"name": "GET /patients/{id} – retrieve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.to.have.status(200) || pm.response.to.have.status(201));",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/patients/14",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patients",
								"14"
							]
						},
						"description": "GET /patients/{id} – retrieve"
					},
					"response": []
				},
				{
					"name": "GET /patients/{id}/appointments – list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/patients/13/appointments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patients",
								"13",
								"appointments"
							]
						},
						"description": "GET /patients/{id}/appointments – list"
					},
					"response": []
				},
				{
					"name": "GET /patients/{id}/medical-records – list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/patients/13/medical-records",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patients",
								"13",
								"medical-records"
							]
						},
						"description": "GET /patients/{id}/medical-records – list"
					},
					"response": []
				},
				{
					"name": "PUT /patients/{id} – update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Name\",\n  \"email\": \"updated@example.com\",\n  \"phoneNumber\": \"07011111111\",\n  \"address\": \"123 Update Street\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/patients/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patients",
								"3"
							]
						},
						"description": "PUT /patients/{id} – update"
					},
					"response": []
				},
				{
					"name": "PUT /patients/{id} – missing phoneNumber",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is correct for error\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
									"});",
									"pm.test(\"Error message is present\", function () {",
									"    var res = pm.response.json();",
									"    pm.expect(res.message || res.error || res.detail || res).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Jane Smith\",\n  \"email\": \"jane@example.com\",\n  \"address\": \"1 Main Street\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/patients/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patients",
								"1"
							]
						},
						"description": "PUT /patients/{id} – missing phoneNumber"
					},
					"response": []
				},
				{
					"name": "DELETE /patients/{id} – delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/patients/16",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patients",
								"16"
							]
						},
						"description": "DELETE /patients/{id} – delete"
					},
					"response": []
				}
			]
		},
		{
			"name": "Doctors",
			"item": [
				{
					"name": "POST /doctors – create valid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Dr. Who\",\n  \"specialisation\": \"General Medicine\",\n  \"email\": \"who@hospital.com\",\n  \"phoneNumber\": \"07222222222\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/doctors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"doctors"
							]
						},
						"description": "POST /doctors – create valid"
					},
					"response": []
				},
				{
					"name": "POST /doctors – invalid email format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is correct for error\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
									"});",
									"pm.test(\"Error message is present\", function () {",
									"    var res = pm.response.json();",
									"    pm.expect(res.message || res.error || res.detail || res).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Dr. Mark\",\n  \"specialisation\": \"Pediatrics\",\n  \"email\": \"markemail.com,\n  \"phoneNumber\": \"07123456789\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/doctors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"doctors"
							]
						},
						"description": "POST /doctors – invalid email format"
					},
					"response": []
				},
				{
					"name": "POST /doctors – missing all fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is correct for error\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
									"});",
									"pm.test(\"Error message is present\", function () {",
									"    var res = pm.response.json();",
									"    pm.expect(res.message || res.error || res.detail || res).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/doctors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"doctors"
							]
						},
						"description": "POST /doctors – missing all fields"
					},
					"response": []
				},
				{
					"name": "GET /doctors – list all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/doctors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"doctors"
							]
						},
						"description": "GET /doctors – list all"
					},
					"response": []
				},
				{
					"name": "GET /doctors/{id} – retrieve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/doctors/11",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"doctors",
								"11"
							]
						},
						"description": "GET /doctors/{id} – retrieve"
					},
					"response": []
				},
				{
					"name": "GET /doctors/{id}/appointments – list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/doctors/17/appointments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"doctors",
								"17",
								"appointments"
							]
						},
						"description": "GET /doctors/{id}/appointments – list"
					},
					"response": []
				},
				{
					"name": "PUT /doctors/{id} – update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Dr. United\",\n  \"specialisation\": \"United\",\n  \"email\": \"united@hospital.com\",\n  \"phoneNumber\": \"07333233333\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/doctors/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"doctors",
								"3"
							]
						},
						"description": "PUT /doctors/{id} – update"
					},
					"response": []
				},
				{
					"name": "PUT /doctors/{id} – missing specialisation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is correct for error\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
									"});",
									"pm.test(\"Error message is present\", function () {",
									"    var res = pm.response.json();",
									"    pm.expect(res.message || res.error || res.detail || res).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Dr. Claire\",\n  \"email\": \"claire@hospital.com\",\n  \"phoneNumber\": \"0741223344\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/doctors/14",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"doctors",
								"14"
							]
						},
						"description": "PUT /doctors/{id} – missing specialisation"
					},
					"response": []
				},
				{
					"name": "DELETE /doctors/{id} – delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/doctors/16",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"doctors",
								"16"
							]
						},
						"description": "DELETE /doctors/{id} – delete"
					},
					"response": []
				}
			]
		},
		{
			"name": "Appointments",
			"item": [
				{
					"name": "POST /appointments – create valid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"appointmentDate\": \"2025-04-21T14:30:00\",\n  \"status\": \"Scheduled\",\n  \"notes\": \"Bring iodine dye contrast.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/appointments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"appointments"
							]
						},
						"description": "POST /appointments – create valid"
					},
					"response": []
				},
				{
					"name": "POST /appointments – missing appointmentDate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is correct for error\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
									"});",
									"pm.test(\"Error message is present\", function () {",
									"    var res = pm.response.json();",
									"    pm.expect(res.message || res.error || res.detail || res).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"appointmentDate\": ,\n  \"notes\": \"Bring reports\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/appointments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"appointments"
							]
						},
						"description": "POST /appointments – missing appointmentDate"
					},
					"response": []
				},
				{
					"name": "GET /appointments – list all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/appointments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"appointments"
							]
						},
						"description": "GET /appointments – list all"
					},
					"response": []
				},
				{
					"name": "GET /appointments/{id} – retrieve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/appointments/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"appointments",
								"3"
							]
						},
						"description": "GET /appointments/{id} – retrieve"
					},
					"response": []
				},
				{
					"name": "GET /appointments/{id}/medical-record – retrieve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/appointments/3/medical-record",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"appointments",
								"3",
								"medical-record"
							]
						},
						"description": "GET /appointments/{id}/medical-record – retrieve"
					},
					"response": []
				},
				{
					"name": "PUT /appointments/{id} – update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"appointmentDate\": \"2025-04-22T10:00:00\",\n  \"status\": \"Completed\",\n  \"notes\": \"Check blood pressure\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/appointments/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"appointments",
								"3"
							]
						},
						"description": "PUT /appointments/{id} – update"
					},
					"response": []
				},
				{
					"name": "PUT /appointments/{id} – invalid date format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is correct for error\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
									"});",
									"pm.test(\"Error message is present\", function () {",
									"    var res = pm.response.json();",
									"    pm.expect(res.message || res.error || res.detail || res).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"appointmentDate\": \"not-a-date\",\n  \"status\": \"Completed\",\n  \"notes\": \"N/A\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/appointments/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"appointments",
								"1"
							]
						},
						"description": "PUT /appointments/{id} – invalid date format"
					},
					"response": []
				},
				{
					"name": "DELETE /appointments/{id} – delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/appointments/17",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"appointments",
								"17"
							]
						},
						"description": "DELETE /appointments/{id} – delete"
					},
					"response": []
				}
			]
		},
		{
			"name": "Medical Records",
			"item": [
				{
					"name": "POST /medical-records – create valid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"recordDate\": \"2025-04-21T10:00:00\",\n  \"diagnosis\": \"Flu\",\n  \"treatment\": \"Rest and fluids\",\n  \"notes\": \"Patient recovering well\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/medical-records",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medical-records"
							]
						},
						"description": "POST /medical-records – create valid"
					},
					"response": []
				},
				{
					"name": "POST /medical-records – missing diagnosis & treatment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is correct for error\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
									"});",
									"pm.test(\"Error message is present\", function () {",
									"    var res = pm.response.json();",
									"    pm.expect(res.message || res.error || res.detail || res).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"recordDate\": \"2025-04-21T10:00:00\"\n  \"recordDate\": \"2025-04-21T10:00:00\"\n\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/medical-records",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medical-records"
							]
						},
						"description": "POST /medical-records – missing diagnosis & treatment"
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api"
		}
	]
}
